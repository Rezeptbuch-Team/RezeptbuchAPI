// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RezeptbuchAPI.Models;

#nullable disable

namespace RezeptbuchAPI.Migrations
{
    [DbContext(typeof(RecipeBookContext))]
    [Migration("20250527005042_ChangeCookingTimeToString")]
    partial class ChangeCookingTimeToString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RezeptbuchAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RezeptbuchAPI.Models.Image", b =>
                {
                    b.Property<string>("Hash")
                        .HasColumnType("text");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Hash");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("RezeptbuchAPI.Models.Recipe", b =>
                {
                    b.Property<string>("Hash")
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("Categories")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("CookingTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageHash")
                        .HasColumnType("text");

                    b.Property<string>("OwnerUuid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Hash");

                    b.HasIndex("ImageHash");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("RezeptbuchAPI.Models.Recipe", b =>
                {
                    b.HasOne("RezeptbuchAPI.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageHash");

                    b.Navigation("Image");
                });
#pragma warning restore 612, 618
        }
    }
}
