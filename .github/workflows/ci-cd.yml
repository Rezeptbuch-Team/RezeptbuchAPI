name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run Tests
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"

      # ReportGenerator installieren (als .NET Global Tool)
      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      # Coverage-Bericht generieren (HTML)
      - name: Generate HTML coverage report
        run: |
          reportgenerator \
            -reports:**/TestResults/*/coverage.cobertura.xml \
            -targetdir:coveragereport \
            -reporttypes:Html

      # Coverage-Report als Artefakt hochladen
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: html-code-coverage-report
          path: coveragereport

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
